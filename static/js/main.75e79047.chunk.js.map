{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","class","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RA+BeA,MA5Bf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC7C,OACM,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACZ,oBAAgBL,UAAU,gBAA1B,SACKI,GADIC,QAIb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCuDDC,G,kNAjEbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKFC,IAAMC,IAAI,0DALR,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGd,EAAKM,SAAS,CAACN,SAAQD,WAAW,IANtB,2C,uDASZ,WACEQ,KAAKN,c,oBAEP,WACE,MAA4BM,KAAKT,MAA1BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OACE,yBAASQ,MAAM,YAAf,SACGT,EACC,qBAAKS,MAAM,SAAX,SACE,sBAAMA,MAAM,eAAZ,0BAGH,qBAAKA,MAAM,SAAX,SACIR,EAAOP,KAAI,SAAAgB,GAAK,OACjB,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,QANToB,EAAMC,e,GA/BPE,IAAMC,YCCxBC,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.75e79047.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nfunction Movie({ year, title, summary, poster, genres}) {\r\n  return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"genres\">\r\n                    {genres.map((genre, index)=> (\r\n                    <li key={index} className=\"genres__genre\">\r\n                        {genre}\r\n                    </li>))}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\nclass App extends React.Component{\n \n  state = {\n    isLoading: true,\n    movies: []\n  };\n \n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n    }\n  } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\");\n  this.setState({movies, isLoading: false});\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    const {isLoading, movies} = this.state;\n    return (\n      <section class=\"container\">\n        {isLoading ? (\n          <div class=\"loader\">\n            <span class=\"loader__text\">Loading...</span>\n        </div>\n        ) : (\n         <div class=\"movies\">\n           { movies.map(movie => (\n            <Movie\n              key={movie.id} \n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary} \n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n           ))}\n         </div>\n        )}\n      </section>\n    );\n  }\n}\n\n/*\n  매 순간 setState를 호출할 때 마다 react는 새로운 state와 함께 render function을 호출한다.\n   \n  add = () => {\n    this.setState(current => ({ count: current.count + 1 }));\n  };\n  minus = () => {\n    this.setState(current => ({ count: current.count - 1 }));\n  };\n*/\n/* 팁:\n왜 function component이 아닌 class component를 쓰는가? -> function에는 없는 \nstate를 구현하기 위해서...\nstate는 object이고, component에는 data를 넣을 공간이 있으며, data는 변한다.\n바꿀 데이터를 state안에 넣는다.\n\n이때, state는 직접 조작해선 안된다. ex) this.state.count = 1\nreact에서 지원하는 setstate를 이용해서 state를 조작해야 react가 render()를 부를때, 변경된 state를\n가지고 refresh 하게 된다. 안그러고 직접 조작하면, render()시 state의 update없이 불려진다.\n*/\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);"],"sourceRoot":""}